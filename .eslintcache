[{"D:\\Trilyo\\Projects\\react-flow-demo\\src\\index.js":"1","D:\\Trilyo\\Projects\\react-flow-demo\\src\\reportWebVitals.js":"2","D:\\Trilyo\\Projects\\react-flow-demo\\src\\App.js":"3","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\ReactFlowApp.js":"4","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\ReactFlowApp.js":"5","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\Demo.js":"6","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\Demo.js":"7","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\InputNode.js":"8","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\AddIconNode.js":"9","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\Node.js":"10","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\InputNode.js":"11","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\AddIconNode.js":"12","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\Node.js":"13","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\Sidebar.js":"14","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app\\ReactFlowApp.js":"15","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app\\Demo.js":"16","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app\\InputNode.js":"17","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Sidebar.js":"18","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Node.js":"19","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\InputNode.js":"20","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\AddIconNode.js":"21","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotBuilder.js":"22","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotFlow.js":"23","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\StartNode.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":688,"mtime":1611566002388,"results":"28","hashOfConfig":"26"},{"size":3636,"mtime":1611382578302,"results":"29","hashOfConfig":"26"},{"size":4087,"mtime":1611381656751,"results":"30","hashOfConfig":"26"},{"size":1685,"mtime":1611383324291,"results":"31","hashOfConfig":"26"},{"size":2021,"mtime":1611381272751,"results":"32","hashOfConfig":"26"},{"size":2215,"mtime":1611226758917,"results":"33","hashOfConfig":"26"},{"size":391,"mtime":1611226758913,"results":"34","hashOfConfig":"26"},{"size":1315,"mtime":1611226758917,"results":"35","hashOfConfig":"26"},{"size":2401,"mtime":1611298994119,"results":"36","hashOfConfig":"26"},{"size":391,"mtime":1611226758917,"results":"37","hashOfConfig":"26"},{"size":2064,"mtime":1611237218204,"results":"38","hashOfConfig":"26"},{"size":2099,"mtime":1611230529354,"results":"39","hashOfConfig":"26"},{"size":2217,"mtime":1611226758913,"results":"40","hashOfConfig":"26"},{"size":1374,"mtime":1611226758913,"results":"41","hashOfConfig":"26"},{"size":1046,"mtime":1611226758913,"results":"42","hashOfConfig":"26"},{"size":2195,"mtime":1611575017533,"results":"43","hashOfConfig":"26"},{"size":1440,"mtime":1611648285089,"results":"44","hashOfConfig":"26"},{"size":2401,"mtime":1611298994119,"results":"45","hashOfConfig":"26"},{"size":391,"mtime":1611226758917,"results":"46","hashOfConfig":"26"},{"size":2635,"mtime":1611576896712,"results":"47","hashOfConfig":"26"},{"size":2090,"mtime":1611566826004,"results":"48","hashOfConfig":"26"},{"size":619,"mtime":1611577242099,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"oxqgkz",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\Trilyo\\Projects\\react-flow-demo\\src\\index.js",[],["109","110"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\reportWebVitals.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\App.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\ReactFlowApp.js",["111","112"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\ReactFlowApp.js",["113","114"],"import React ,{useEffect, useState} from 'react';\r\nimport  {  getIncomers } from 'react-flow-renderer';\r\nimport SideBar from './Sidebar';\r\nimport Demo from './Demo';\r\nimport \"./Sidebar.css\";\r\n\r\nlet i = 1;\r\nfunction ReactFlowApp2 () {\r\n    \r\n    const [elements, setElements] = useState();\r\n    \r\n    const [clickedNode, setClickedNode] = useState();\r\n\r\n    const updateNewNode = (nodeId,name) => {\r\n      setElements(eles => eles.map(els => {\r\n        if(els.id === nodeId){\r\n            return {...els, type:\"node\",data: { label: name, elements:elements,setElements:setElements }}\r\n            \r\n        }\r\n          return els;\r\n  \r\n      }) )\r\n\r\n    }\r\n\r\n    const addNewNode = (parentNodeId) =>{\r\n        i=i+1;\r\n        const newNode = {\r\n            id:`horizontal-${i}`,\r\n            type:\"newNode\",\r\n            data: { updateNewNode:updateNewNode, nodeId:`horizontal-${i}`,setElements:setElements   },\r\n            position: { x: 350, y: 150 },\r\n            style: { border: '1px solid #777', padding:\"5px\",\r\n            borderRadius:\"15px\",\r\n            \r\n            width:\"auto\" }\r\n           \r\n        }\r\n        const newEdge = {id:`${parentNodeId}-horizontal-${i}`, source:parentNodeId, target:`horizontal-${i}`};\r\n        const newAddIcon = {\r\n          id: `add-${i}`,\r\n          type:\"addIconNode\",\r\n          data: { label: <i className=\"fas fa-plus-circle\"></i> },\r\n          position: { x:newNode.position.x+100 , y: newNode.position.y+200 },\r\n          \r\n          style: {\r\n              padding: 0,\r\n              width: \"1rem\",\r\n              border:\"none\",\r\n            },\r\n        };\r\n        const newAddIconEdge = {id:`horizontal-${i}-${newAddIcon.id}`, source:`horizontal-${i}`, target:newAddIcon.id};\r\n        setElements([...elements,newNode,newEdge,newAddIcon,newAddIconEdge]);\r\n    }\r\n    const initialElements = [\r\n      // {\r\n      //   id: '1',\r\n      //   type: 'input',\r\n      //   data: { label: 'Start' },\r\n      //   position: { x: 100, y: 50 },\r\n      //   style:{\r\n      //       padding:\"5px\",\r\n      //       borderRadius:\"15px\",\r\n      //       width:\"100px\"\r\n      //   }\r\n        \r\n      // },\r\n      \r\n      // {\r\n      //   id: '2',\r\n      //   type: 'output', // output node\r\n        \r\n      //   data: { label: 'Fallback' },\r\n      //   position: { x: 100, y: 250 },\r\n      //   style:{\r\n      //       padding:\"5px\",\r\n      //       borderRadius:\"15px\",\r\n      //       width:\"100px\"\r\n      //   }\r\n      // },\r\n      {\r\n        id: '1',\r\n        type:'newNode',\r\n        \r\n        data: { updateNewNode:updateNewNode },\r\n        position: { x: 100, y: 10 },\r\n        \r\n        style: { border: '1px solid #777', padding:\"5px\",\r\n                borderRadius:\"15px\",\r\n                \r\n                width:\"auto\" }\r\n      },\r\n      {\r\n        id: 'add-1',\r\n        type:\"addIconNode\",\r\n        sourcePosition: 'right',\r\n        targetPosition: 'left',\r\n        // data: { label: <i className=\"fas fa-plus-circle\"></i> },\r\n        position: { x: 250, y: 200 },\r\n        \r\n        style: {\r\n            padding: 0,\r\n            width: \"1rem\",\r\n            border:\"none\",\r\n          },\r\n      },\r\n      // {id:\"e1-2\", source:\"1\", target:\"2\"},\r\n      {id:\"1-add-1\", source:\"1\", target:\"add-1\"}\r\n    ];\r\n    useEffect(() => {\r\n      setElements(initialElements);\r\n    },[]);\r\n    \r\n    // useEffect(() => {\r\n    //   setElements(elements => elements.map(els => {\r\n    //     if(getIncomers(els,elements).length < 1 && els.id != '1'){\r\n    //       console.log(els);\r\n    //         return {...els, style:{...els.style,border:\"red\"}}\r\n            \r\n    //     }\r\n    //       return els;\r\n  \r\n    //   }) )\r\n    // },[elements]);\r\n\r\n    return (\r\n      <div className='ReactFlowApp'>\r\n          <button onClick={addNewNode}>\r\n              Add New Node\r\n          </button>      \r\n        <Demo elements={elements} setElements={setElements} addNewNode={addNewNode} setClickedNode={setClickedNode}/>\r\n        <SideBar updateNewNode={updateNewNode} clickedNode={clickedNode}/>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default ReactFlowApp2;\r\n",["115","116"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\Demo.js",["117"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\Demo.js",["118"],"import React, { useState } from 'react';\r\nimport ReactFlow, { removeElements, addEdge, ReactFlowProvider, Background, getIncomers } from 'react-flow-renderer';\r\nimport InputNode from './InputNode';\r\nimport Node from './Node';\r\nimport AddIconNode from './AddIconNode';\r\n\r\nconst onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\n\r\nconst nodeTypes = {\r\n  newNode: InputNode,\r\n  node: Node,\r\n  addIconNode:AddIconNode\r\n};\r\n\r\nconst openModal = () => {\r\n  console.log(\"clicked\");\r\n  document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n  document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n};\r\n\r\nconst Demo = ({elements,setElements,addNewNode,setClickedNode}) => {\r\n//   const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  const onElementClick = (event, element) => {\r\n    if(element.type === 'addIconNode'){\r\n      console.log(element);\r\n      addNewNode(getIncomers(element,elements)[0].id);\r\n    }\r\n    if(element.type === 'node' && event.target.className !==  \"fas fa-times-circle\"){\r\n     \r\n      setClickedNode(element);\r\n      openModal();\r\n      \r\n    }\r\n\r\n      // console.log(event);\r\n      // console.log(element);\r\n      \r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n        <ReactFlowProvider>\r\n        <ReactFlow\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            deleteKeyCode={46} /* 'delete'-key */\r\n            onLoad={onLoad}\r\n            onElementClick={onElementClick}\r\n            paneMoveable={false}\r\n            zoomOnScroll={false}\r\n            nodeTypes={nodeTypes}\r\n        >\r\n          <Background\r\n      variant=\"dots\"\r\n      gap={12}\r\n      size={1}\r\n    />\r\n    \r\n      </ReactFlow>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\InputNode.js",[],["119","120"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\AddIconNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app2\\Node.js",["121","122"],"import React, { memo , useState} from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\n// import '../style.css'\r\nexport default memo(({id,data}) => {\r\n  const [interactionName, setInteractionName ] = useState(\"\");\r\n  const submitHandler = (e) =>{\r\n      e.preventDefault();\r\n      //\r\n      data.updateNewNode(data.nodeId,interactionName)\r\n      // console.log(data.nodeId);\r\n      // console.log(interactionName);\r\n  }\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        // style={{ background: '#555' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n     \r\n      <div className=\"node\" >\r\n      \r\n        <strong>{data.label}</strong>\r\n        <br /><br />\r\n        <input type=\"button\" value=\"Response 1\" />\r\n        <input type=\"button\" value=\"Response 2\" />\r\n        <input type=\"button\" value=\"Response 3\" />\r\n        <br /><br />\r\n        {/* <img\r\n          src=\"https://image.flaticon.com/icons/png/512/61/61183.png\"\r\n          alt=\"\"\r\n          width=\"30px\"\r\n          height=\"auto\"\r\n        /> */}\r\n     \r\n    </div>\r\n      <Handle\r\n       onClick={() => console.log(id)}\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        \r\n        // style={{ top: 10, background: '#555' }}\r\n      />\r\n     \r\n    </>\r\n  );\r\n});","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\InputNode.js",["123"],"import React, { memo , useState} from 'react';\r\nimport { Handle, removeElements } from 'react-flow-renderer';\r\nimport './style1.css'\r\n\r\nexport default memo(({data,id}) => {\r\n  const [interactionName, setInteractionName ] = useState(\"\");\r\n  const submitHandler = (e) =>{\r\n      e.preventDefault();\r\n      //\r\n      data.updateNewNode(id,interactionName)\r\n      // console.log(data.nodeId);\r\n      // console.log(interactionName);\r\n  }\r\n  const deleteNode = () =>{\r\n    if(id != '1')\r\n    data.setElements((els) => removeElements([els.find( e => e.id === id)], els));\r\n  }\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        // style={{ background: '#555' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      {/* <form onSubmit={submitHandler}>\r\n        <input\r\n          className=\"nodrag\"\r\n          type=\"text\"\r\n          placeholder=\"New node\"\r\n          value={interactionName}\r\n          onChange={(e) => setInteractionName(e.target.value)}\r\n        />\r\n      </form> */}\r\n      {/* <div className=\"node\" >\r\n      <form onSubmit={submitHandler}>\r\n        <input type=\"text\"  placeholder=\"Node Name\" id=\"\" \r\n         value={interactionName}\r\n         onChange={(e) => setInteractionName(e.target.value)}\r\n        />\r\n        <br /><br />\r\n        <input type=\"button\" value=\"Response 1\" />\r\n        <input type=\"button\" value=\"Response 2\" />\r\n        <input type=\"button\" value=\"Response 3\" />\r\n        <br /><br />\r\n      </form>\r\n    </div> */}\r\n    <div class=\"node\">\r\n      <div class=\"node-header\">\r\n        <div class=\"dot\"></div>\r\n        <form class=\"node-name\" onSubmit={submitHandler}>\r\n          <i class=\"far fa-envelope-open\"></i>\r\n          &ensp;<input\r\n            type=\"text\"\r\n            value={interactionName}\r\n            onChange={(e) => setInteractionName(e.target.value)}\r\n            placeholder=\"Node Name\"\r\n            id=\"\"\r\n          />&ensp;&ensp;\r\n          <p>(send message)</p>\r\n        </form>\r\n        <div class=\"cross\">\r\n          <button onClick={deleteNode}><i class=\"fas fa-times-circle\"></i></button>\r\n        </div>\r\n      </div>\r\n      <div class=\"message\">Hi name, Welcome to brand_name.</div>\r\n    </div>\r\n      <Handle\r\n    \r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        \r\n        // style={{ top: 10, background: '#555' }}\r\n      />\r\n     \r\n    </>\r\n  );\r\n});","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\AddIconNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\Node.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app3\\Sidebar.js",["124","125"],"import React, { useEffect, useState } from 'react';\r\n// import Sidebar from \"react-sidebar\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst SideBar = ({clickedNode,updateNewNode}) => {\r\n  const greyBg = document.getElementById(\"grey-screen\");\r\n  const sideStyle = {\r\n    height: \"100vh\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"auto\",\r\n    right: \"0\",\r\n    width: \"400px\",\r\n    backgroundColor: \"white\",\r\n    transition: \"0.5s\",\r\n    zIndex: \"100000000\",\r\n    padding: \"20px\",\r\n  };\r\n\r\n  const modalBtn = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"600px\",\r\n    zIndex: \"10000\",\r\n  };\r\n\r\n  const openModal = () => {\r\n    console.log(\"clicked\");\r\n    document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n    document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n  };\r\n\r\n  const closeModal = () => {\r\n    document.getElementById(\"sidebar\").classList.remove(\"side-bar-open\");\r\n    setTimeout(() => {\r\n      document.getElementById(\"grey-screen\").style = \"width:0\";\r\n    }, 400);\r\n  };\r\n\r\n  const [interactionName, setInteractionName ] = useState(\"\");\r\n  const submitHandler = (e) =>{\r\n      e.preventDefault();\r\n      //\r\n      updateNewNode(clickedNode.id,interactionName);\r\n      closeModal();\r\n      // console.log(data.nodeId);\r\n      // console.log(interactionName);\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\" id=\"modal\">\r\n      <button style={modalBtn} onClick={openModal} className=\"modal-open\">\r\n        Open Modal\r\n      </button>\r\n      <br />\r\n      <div className=\"grey-screen\" id=\"grey-screen\">\r\n        <div className=\"side-bar\" id=\"sidebar\" style={sideStyle}>\r\n          <form onSubmit={submitHandler}>\r\n            <label htmlFor=\"name\">Enter</label>\r\n            <input type=\"text\" name=\"name\" id=\"name\" value={interactionName}\r\n            onChange={(e) => setInteractionName(e.target.value)}/>\r\n            <br />\r\n          <button onClick={submitHandler}>Save</button>\r\n          </form>\r\n          <br />\r\n          <button onClick={closeModal}>Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app\\ReactFlowApp.js",["126"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app\\Demo.js",["127"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\react-flow-app\\InputNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Sidebar.js",["128","129"],"import React, { useEffect, useState } from 'react';\r\n// import Sidebar from \"react-sidebar\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst SideBar = ({addNewNode,clickedNode,updateNewNode,prevNode, setPrevNode}) => {\r\n  const greyBg = document.getElementById(\"grey-screen\");\r\n  const sideStyle = {\r\n    height: \"100vh\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"auto\",\r\n    right: \"0\",\r\n    width: \"400px\",\r\n    backgroundColor: \"white\",\r\n    transition: \"0.5s\",\r\n    zIndex: \"100000000\",\r\n    padding: \"20px\",\r\n  };\r\n\r\n  // const openModal = () => {\r\n  //   console.log(\"clicked\");\r\n  //   document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n  //   document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n  // };\r\n\r\n  const closeModal = () => {\r\n    document.getElementById(\"sidebar\").classList.remove(\"side-bar-open\");\r\n    setTimeout(() => {\r\n      document.getElementById(\"grey-screen\").style = \"width:0\";\r\n    }, 400);\r\n  };\r\n\r\n  const [interactionName, setInteractionName ] = useState(\"\");\r\n  const submitHandler = (e) =>{\r\n      e.preventDefault();\r\n      // if prevNode then addnewnode(payload,prevnode)\r\n      if(prevNode){\r\n        addNewNode(prevNode,interactionName);\r\n      }\r\n      // if clickedNode then updatenode(payload, clickedNode)\r\n      // updateNewNode(clickedNode.id,interactionName);\r\n      closeModal();\r\n      setPrevNode(null);\r\n      //setClickedNode(null);\r\n      //setPayLoad(null);\r\n      // console.log(data.nodeId);\r\n      // console.log(interactionName);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"modal\" id=\"modal\">\r\n      <br />\r\n      <div className=\"grey-screen\" id=\"grey-screen\">\r\n        <div className=\"side-bar\" id=\"sidebar\" style={sideStyle}>\r\n          <form onSubmit={submitHandler}>\r\n            <label htmlFor=\"name\">Enter</label>\r\n            <input type=\"text\" name=\"name\" id=\"name\" value={interactionName}\r\n            onChange={(e) => setInteractionName(e.target.value)}/>\r\n            <br />\r\n          <button onClick={submitHandler}>Save</button>\r\n          </form>\r\n          <br />\r\n          <button onClick={closeModal}>Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Node.js",["130"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\InputNode.js",["131"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\AddIconNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotBuilder.js",["132"],"import React ,{useEffect, useState} from 'react';\r\nimport SideBar from './Sidebar';\r\nimport BotFlow from './BotFlow';\r\nimport \"./Sidebar.css\";\r\n\r\nlet i = 1;\r\nfunction BotBuilder () {\r\n    \r\n    const [elements, setElements] = useState();\r\n    \r\n    const [clickedNode, setClickedNode] = useState();\r\n    const [prevNode, setPrevNode] = useState();\r\n\r\n    const updateNewNode = (nodeId,name) => {\r\n      setElements(eles => eles.map(els => {\r\n        if(els.id === nodeId){\r\n            return {...els, type:\"node\",data: { label: name, elements:elements,setElements:setElements }}\r\n            \r\n        }\r\n          return els;\r\n  \r\n      }) )\r\n\r\n    }\r\n\r\n    const addNewNode = (parentNodeId,payload) =>{\r\n        i=i+1;\r\n        const newNode = {\r\n            id:`${i}`,\r\n            type:\"node\",\r\n            data: {  label: payload, setPrevNode: setPrevNode  },\r\n            payload:payload,\r\n            position: { x: 350, y: 150 },\r\n            style: { border: '1px solid #777', padding:\"5px\",\r\n            borderRadius:\"15px\",\r\n            width:\"auto\" }\r\n           \r\n        }\r\n        const newEdge = {id:`e${parentNodeId}-${i}`, source:parentNodeId, target:`${i}`,type: 'smoothstep'};\r\n        \r\n        setElements([...elements,newNode,newEdge]);\r\n    }\r\n    const initialElements = [\r\n      \r\n      {\r\n        id: '1',\r\n        type:'startNode',\r\n        data: { setPrevNode: setPrevNode },\r\n        position: { x: 700, y: 50 },\r\n        style: { border: '1px solid #777', padding:\"15px\",\r\n                borderRadius:\"20px\",\r\n                background:\"#445B75\",\r\n                color:\"#ffffff\",\r\n                width:\"auto\" }\r\n      },\r\n      // {\r\n      //   id: 'add-1',\r\n      //   type:\"addIconNode\",\r\n      //   sourcePosition: 'right',\r\n      //   targetPosition: 'left',\r\n      //   // data: { label: <i className=\"fas fa-plus-circle\"></i> },\r\n      //   position: { x: 250, y: 200 },\r\n        \r\n      //   style: {\r\n      //       padding: 0,\r\n      //       width: \"1rem\",\r\n      //       border:\"none\",\r\n      //     },\r\n      // },\r\n      // // {id:\"e1-2\", source:\"1\", target:\"2\"},\r\n      // {id:\"1-add-1\", source:\"1\", target:\"add-1\"}\r\n    ];\r\n    useEffect(() => {\r\n      setElements(initialElements);\r\n    },[]);\r\n\r\n    return (\r\n      <div className='ReactFlowApp'>      \r\n        <BotFlow elements={elements} setElements={setElements} addNewNode={addNewNode} setClickedNode={setClickedNode}/>\r\n        <SideBar addNewNode={addNewNode} updateNewNode={updateNewNode} clickedNode={clickedNode} prevNode={prevNode} setPrevNode={setPrevNode}/>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default BotBuilder;\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotFlow.js",["133"],"import React, { useState } from 'react';\r\nimport ReactFlow, { removeElements, addEdge, ReactFlowProvider, Background, getIncomers } from 'react-flow-renderer';\r\nimport InputNode from './InputNode';\r\nimport Node from './Node';\r\nimport AddIconNode from './AddIconNode';\r\nimport StartNode from './StartNode';\r\n\r\nconst onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\n\r\nconst nodeTypes = {\r\n  startNode: StartNode,\r\n  newNode: InputNode,\r\n  node: Node,\r\n  addIconNode:AddIconNode\r\n};\r\n\r\nconst openModal = () => {\r\n  console.log(\"clicked\");\r\n  document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n  document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n};\r\n\r\nconst BotFlow = ({elements,setElements,addNewNode,setClickedNode}) => {\r\n//   const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  const onElementClick = (event, element) => {\r\n    if(element.type === 'addIconNode'){\r\n      console.log(element);\r\n      addNewNode(getIncomers(element,elements)[0].id);\r\n    }\r\n    if(element.type === 'node' && event.target.className !==  \"fas fa-times-circle\"){\r\n     \r\n      setClickedNode(element);\r\n      openModal();\r\n      \r\n    }\r\n\r\n      // console.log(event);\r\n      // console.log(element);\r\n      \r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n        <ReactFlowProvider>\r\n        <ReactFlow\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            deleteKeyCode={46} /* 'delete'-key */\r\n            onLoad={onLoad}\r\n            onElementClick={onElementClick}\r\n            paneMoveable={false}\r\n            zoomOnScroll={false}\r\n            nodeTypes={nodeTypes}\r\n        >\r\n          <Background\r\n      variant=\"dots\"\r\n      gap={12}\r\n      size={1}\r\n    />\r\n    \r\n      </ReactFlow>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotFlow;\r\n\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\StartNode.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":12,"nodeType":"140","messageId":"141","endLine":2,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":113,"column":7,"nodeType":"144","endLine":113,"endColumn":9,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":2,"column":12,"nodeType":"140","messageId":"141","endLine":2,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":112,"column":7,"nodeType":"144","endLine":112,"endColumn":9,"suggestions":"147"},{"ruleId":"134","replacedBy":"148"},{"ruleId":"136","replacedBy":"149"},{"ruleId":"138","severity":1,"message":"150","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"150","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"134","replacedBy":"151"},{"ruleId":"136","replacedBy":"152"},{"ruleId":"138","severity":1,"message":"153","line":5,"column":27,"nodeType":"140","messageId":"141","endLine":5,"endColumn":45},{"ruleId":"138","severity":1,"message":"154","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":15,"column":11,"nodeType":"157","messageId":"158","endLine":15,"endColumn":13},{"ruleId":"138","severity":1,"message":"159","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":2,"column":12,"nodeType":"140","messageId":"141","endLine":2,"endColumn":29},{"ruleId":"138","severity":1,"message":"150","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"159","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"150","line":1,"column":24,"nodeType":"140","messageId":"141","endLine":1,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":15,"column":11,"nodeType":"157","messageId":"158","endLine":15,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":75,"column":7,"nodeType":"144","endLine":75,"endColumn":9,"suggestions":"161"},{"ruleId":"138","severity":1,"message":"150","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'getConnectedEdges' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialElements'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'getIncomers' is defined but never used.",["165"],["162"],["163"],"'useState' is defined but never used.",["162"],["163"],"'setInteractionName' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'greyBg' is assigned a value but never used.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"167","fix":"170"},"Update the dependencies array to be: [initialElements]",{"range":"171","text":"172"},{"range":"173","text":"172"},{"range":"174","text":"172"},[3327,3329],"[initialElements]",[3320,3322],[2242,2244]]