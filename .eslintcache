[{"D:\\Trilyo\\Projects\\react-flow-demo\\src\\index.js":"1","D:\\Trilyo\\Projects\\react-flow-demo\\src\\reportWebVitals.js":"2","D:\\Trilyo\\Projects\\react-flow-demo\\src\\App.js":"3","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotBuilder.js":"4","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Sidebar.js":"5","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotFlow.js":"6","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\InputNode.js":"7","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Node.js":"8","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\AddIconNode.js":"9","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\SideBarOptions.js":"10","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\StartNode.js":"11","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\QuickReplyNode.js":"12","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\ImageNode.js":"13","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\TextNode.js":"14","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\CardNode.js":"15","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\VideoNode.js":"16","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\AttachmentNode.js":"17","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\RatingNode.js":"18","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\FormNode.js":"19","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\SearchListNode.js":"20","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\MultiSelectNode.js":"21","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\RangeNode.js":"22","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\BitNode.js":"23","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\NameFieldNode.js":"24","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\EmailFieldNode.js":"25","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\PhoneNumNode.js":"26","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\LocationNode.js":"27","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\DataFieldNode.js":"28","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\TimeFieldNode.js":"29","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\CustomFieldNode.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":688,"mtime":1611566002388,"results":"34","hashOfConfig":"32"},{"size":2596,"mtime":1611764494432,"results":"35","hashOfConfig":"32"},{"size":2281,"mtime":1611829737692,"results":"36","hashOfConfig":"32"},{"size":3772,"mtime":1611855244201,"results":"37","hashOfConfig":"32"},{"size":2401,"mtime":1611298994119,"results":"38","hashOfConfig":"32"},{"size":1440,"mtime":1611648285089,"results":"39","hashOfConfig":"32"},{"size":391,"mtime":1611226758917,"results":"40","hashOfConfig":"32"},{"size":76002,"mtime":1611855386412,"results":"41","hashOfConfig":"32"},{"size":647,"mtime":1611764090233,"results":"42","hashOfConfig":"32"},{"size":4157,"mtime":1611763975100,"results":"43","hashOfConfig":"32"},{"size":3987,"mtime":1611830323698,"results":"44","hashOfConfig":"32"},{"size":2537,"mtime":1611763552582,"results":"45","hashOfConfig":"32"},{"size":3259,"mtime":1611827135281,"results":"46","hashOfConfig":"32"},{"size":3132,"mtime":1611832322338,"results":"47","hashOfConfig":"32"},{"size":3713,"mtime":1611832740854,"results":"48","hashOfConfig":"32"},{"size":3581,"mtime":1611833374280,"results":"49","hashOfConfig":"32"},{"size":3651,"mtime":1611833782837,"results":"50","hashOfConfig":"32"},{"size":4909,"mtime":1611834100660,"results":"51","hashOfConfig":"32"},{"size":2810,"mtime":1611904862842,"results":"52","hashOfConfig":"32"},{"size":4600,"mtime":1611834779850,"results":"53","hashOfConfig":"32"},{"size":3821,"mtime":1611835012831,"results":"54","hashOfConfig":"32"},{"size":5229,"mtime":1611840169412,"results":"55","hashOfConfig":"32"},{"size":4119,"mtime":1611840334933,"results":"56","hashOfConfig":"32"},{"size":3624,"mtime":1611904871107,"results":"57","hashOfConfig":"32"},{"size":3853,"mtime":1611904865636,"results":"58","hashOfConfig":"32"},{"size":4854,"mtime":1611854636173,"results":"59","hashOfConfig":"32"},{"size":2910,"mtime":1611855019730,"results":"60","hashOfConfig":"32"},{"size":2987,"mtime":1611904868404,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"oxqgkz",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Trilyo\\Projects\\react-flow-demo\\src\\index.js",[],["128","129"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\reportWebVitals.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\App.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotBuilder.js",["130"],"import React ,{useEffect, useState} from 'react';\r\nimport SideBar from './Sidebar';\r\nimport BotFlow from './BotFlow';\r\nimport \"./Sidebar.css\";\r\n\r\nlet i = 1;\r\nfunction BotBuilder () {\r\n    \r\n    const [elements, setElements] = useState();\r\n    \r\n    const [clickedNode, setClickedNode] = useState();\r\n    const [prevNode, setPrevNode] = useState();\r\n\r\n    const updateNewNode = (nodeId,name) => {\r\n      setElements(eles => eles.map(els => {\r\n        if(els.id === nodeId){\r\n            return {...els, type:\"node\",data: { label: name, elements:elements,setElements:setElements }}\r\n            \r\n        }\r\n          return els;\r\n  \r\n      }) )\r\n\r\n    }\r\n\r\n    const addNewNode = (parentNodeId,nodeType) =>{\r\n        i=i+1;\r\n        const newNode = {\r\n            id:`${i}`,\r\n            type:`${nodeType}`,\r\n            data: {   setPrevNode: setPrevNode, setElements:setElements },\r\n            // payload:payload,\r\n            position: { x: 350, y: 150 },\r\n            style: {  padding:\"5px\",\r\n            width:\"auto\" }\r\n           \r\n        }\r\n        const newEdge = {id:`e${parentNodeId}-${i}`, source:parentNodeId, target:`${i}`,type: 'smoothstep'};\r\n        \r\n        setElements([...elements,newNode,newEdge]);\r\n    }\r\n    const initialElements = [\r\n      \r\n      {\r\n        id: '1',\r\n        type:'startNode',\r\n        data: { setPrevNode: setPrevNode },\r\n        position: { x: 700, y: 50 },\r\n        style: { border: '1px solid #777', padding:\"15px\",\r\n                borderRadius:\"20px\",\r\n                background:\"#445B75\",\r\n                color:\"#ffffff\",\r\n                width:\"auto\" }\r\n      },\r\n      // {\r\n      //   id: 'add-1',\r\n      //   type:\"addIconNode\",\r\n      //   sourcePosition: 'right',\r\n      //   targetPosition: 'left',\r\n      //   // data: { label: <i className=\"fas fa-plus-circle\"></i> },\r\n      //   position: { x: 250, y: 200 },\r\n        \r\n      //   style: {\r\n      //       padding: 0,\r\n      //       width: \"1rem\",\r\n      //       border:\"none\",\r\n      //     },\r\n      // },\r\n      // // {id:\"e1-2\", source:\"1\", target:\"2\"},\r\n      // {id:\"1-add-1\", source:\"1\", target:\"add-1\"}\r\n    ];\r\n    useEffect(() => {\r\n      setElements(initialElements);\r\n    },[]);\r\n\r\n    return (\r\n      <div className='ReactFlowApp'>      \r\n        <BotFlow elements={elements} setElements={setElements} addNewNode={addNewNode} setClickedNode={setClickedNode}/>\r\n        <SideBar addNewNode={addNewNode} updateNewNode={updateNewNode} clickedNode={clickedNode} prevNode={prevNode} setPrevNode={setPrevNode}/>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default BotBuilder;\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Sidebar.js",["131","132","133","134"],"import React, { useEffect, useState } from \"react\";\r\n// import Sidebar from \"react-sidebar\";\r\nimport \"./Sidebar.css\";\r\nimport SideBarOptions from \"./SideBarOptions\";\r\n\r\nconst SideBar = ({\r\n  addNewNode,\r\n  clickedNode,\r\n  updateNewNode,\r\n  prevNode,\r\n  setPrevNode,\r\n}) => {\r\n  const greyBg = document.getElementById(\"grey-screen\");\r\n  const sideStyle = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"auto\",\r\n    right: \"0\",\r\n    width: \"350px\",\r\n    backgroundColor: \"#f2f4f7\",\r\n    transition: \"0.5s\",\r\n    zIndex: \"100000000\",\r\n    padding: \"20px\",\r\n  };\r\n\r\n  // const openModal = () => {\r\n  //   console.log(\"clicked\");\r\n  //   document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n  //   document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n  // };\r\n\r\n  const closeModal = () => {\r\n    document.getElementById(\"sidebar\").classList.remove(\"side-bar-open\");\r\n    setTimeout(() => {\r\n      document.getElementById(\"grey-screen\").style = \"width:0\";\r\n    }, 400);\r\n  };\r\n\r\n  const [interactionName, setInteractionName] = useState(\"\");\r\n  const clickHandler = (nodeType) => {\r\n    // e.preventDefault();\r\n    // if prevNode then addnewnode(payload,prevnode)\r\n    if (prevNode) {\r\n      addNewNode(prevNode, nodeType);\r\n    }\r\n    // if clickedNode then updatenode(payload, clickedNode)\r\n    // updateNewNode(clickedNode.id,interactionName);\r\n    closeModal();\r\n    setPrevNode(null);\r\n    //setClickedNode(null);\r\n    //setPayLoad(null);\r\n    // console.log(data.nodeId);\r\n    // console.log(interactionName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-modal\" id=\"modal\">\r\n      <div className=\"grey-screen\" id=\"grey-screen\">\r\n        <div className=\"side-bar\" id=\"sidebar\" style={sideStyle}>\r\n          {/* <form onSubmit={submitHandler}>\r\n            <label htmlFor=\"name\">Enter</label>\r\n            <input type=\"text\" name=\"name\" id=\"name\" value={interactionName}\r\n            onChange={(e) => setInteractionName(e.target.value)}/>\r\n            <br />\r\n          <button onClick={submitHandler}>Save</button>\r\n          </form> */}\r\n          <button onClick={closeModal}>Close</button>\r\n          <SideBarOptions clickHandler={clickHandler}/>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\BotFlow.js",["135"],"import React, { useState } from 'react';\r\nimport ReactFlow, { removeElements, addEdge, ReactFlowProvider, Background, getIncomers } from 'react-flow-renderer';\r\nimport InputNode from './InputNode';\r\nimport Node from './Node';\r\nimport AddIconNode from './AddIconNode';\r\nimport StartNode from './NodeComponents/StartNode';\r\nimport TextNode from './NodeComponents/TextNode';\r\nimport QuickReplyNode from './NodeComponents/QuickReplyNode';\r\nimport CardNode from './NodeComponents/CardNode';\r\nimport ImageNode from './NodeComponents/ImageNode';\r\nimport VideoNode from './NodeComponents/VideoNode';\r\nimport AttachmentNode from './NodeComponents/AttachmentNode';\r\nimport RatingNode from './NodeComponents/RatingNode';\r\nimport FormNode from './NodeComponents/FormNode';\r\nimport SearchListNode from './NodeComponents/SearchListNode';\r\nimport MultiSelectNode from './NodeComponents/MultiSelectNode';\r\nimport RangeNode from './NodeComponents/RangeNode';\r\nimport BitNode from './NodeComponents/BitNode';\r\nimport NameFieldNode from './NodeComponents/NameFieldNode';\r\nimport EmailFieldNode from './NodeComponents/EmailFieldNode';\r\nimport PhoneNumNode from './NodeComponents/PhoneNumNode';\r\nimport LocationNode from './NodeComponents/LocationNode';\r\nimport DataFieldNode from './NodeComponents/DataFieldNode';\r\nimport TimeFieldNode from './NodeComponents/TimeFieldNode';\r\nimport CustomFieldNode from './NodeComponents/CustomFieldNode';\r\n\r\nconst onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\n\r\nconst nodeTypes = {\r\n  startNode: StartNode,\r\n  newNode: InputNode,\r\n  node: Node,\r\n  addIconNode:AddIconNode,\r\n  textNode: TextNode,\r\n  quickreplyNode:QuickReplyNode,\r\n  cardNode: CardNode,\r\n  imageNode: ImageNode,\r\n  videoNode: VideoNode,\r\n  attachmentNode: AttachmentNode,\r\n  ratingNode: RatingNode,\r\n  formNode: FormNode,\r\n  searchListNode: SearchListNode,\r\n  multiSelectNode: MultiSelectNode,\r\n  rangeNode: RangeNode,\r\n  bitNode: BitNode,\r\n\r\n  nameFieldNode: NameFieldNode,\r\n  emailFieldNode: EmailFieldNode,\r\n  phoneNumNode: PhoneNumNode,\r\n  locationNode: LocationNode,\r\n  dataFieldNode: DataFieldNode,\r\n  timeFieldNode: TimeFieldNode,\r\n  customFieldNode: CustomFieldNode\r\n};\r\n\r\nconst openModal = () => {\r\n  console.log(\"clicked\");\r\n  document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n  document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n};\r\n\r\nconst BotFlow = ({elements,setElements,addNewNode,setClickedNode}) => {\r\n//   const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  const onElementClick = (event, element) => {\r\n    if(element.type === 'addIconNode'){\r\n      console.log(element);\r\n      addNewNode(getIncomers(element,elements)[0].id);\r\n    }\r\n    if(element.type === 'node' && event.target.className !==  \"fas fa-times-circle\"){\r\n     \r\n      setClickedNode(element);\r\n      openModal();\r\n      \r\n    }\r\n\r\n      // console.log(event);\r\n      // console.log(element);\r\n      \r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n        <ReactFlowProvider>\r\n        <ReactFlow\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            deleteKeyCode={46} /* 'delete'-key */\r\n            onLoad={onLoad}\r\n            onElementClick={onElementClick}\r\n            paneMoveable={false}\r\n            zoomOnScroll={false}\r\n            nodeTypes={nodeTypes}\r\n        >\r\n          <Background\r\n      variant=\"dots\"\r\n      gap={12}\r\n      size={1}\r\n    />\r\n    \r\n      </ReactFlow>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotFlow;\r\n\r\n","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\InputNode.js",["136"],"import React, { memo , useState} from 'react';\r\nimport { Handle, removeElements } from 'react-flow-renderer';\r\nimport './style1.css'\r\n\r\nexport default memo(({data,id}) => {\r\n  const [interactionName, setInteractionName ] = useState(\"\");\r\n  const submitHandler = (e) =>{\r\n      e.preventDefault();\r\n      //\r\n      data.updateNewNode(id,interactionName)\r\n      // console.log(data.nodeId);\r\n      // console.log(interactionName);\r\n  }\r\n  const deleteNode = () =>{\r\n    if(id != '1')\r\n    data.setElements((els) => removeElements([els.find( e => e.id === id)], els));\r\n  }\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        // style={{ background: '#555' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      {/* <form onSubmit={submitHandler}>\r\n        <input\r\n          className=\"nodrag\"\r\n          type=\"text\"\r\n          placeholder=\"New node\"\r\n          value={interactionName}\r\n          onChange={(e) => setInteractionName(e.target.value)}\r\n        />\r\n      </form> */}\r\n      {/* <div className=\"node\" >\r\n      <form onSubmit={submitHandler}>\r\n        <input type=\"text\"  placeholder=\"Node Name\" id=\"\" \r\n         value={interactionName}\r\n         onChange={(e) => setInteractionName(e.target.value)}\r\n        />\r\n        <br /><br />\r\n        <input type=\"button\" value=\"Response 1\" />\r\n        <input type=\"button\" value=\"Response 2\" />\r\n        <input type=\"button\" value=\"Response 3\" />\r\n        <br /><br />\r\n      </form>\r\n    </div> */}\r\n    <div class=\"node\">\r\n      <div class=\"node-header\">\r\n        <div class=\"dot\"></div>\r\n        <form class=\"node-name\" onSubmit={submitHandler}>\r\n          <i class=\"far fa-envelope-open\"></i>\r\n          &ensp;<input\r\n            type=\"text\"\r\n            value={interactionName}\r\n            onChange={(e) => setInteractionName(e.target.value)}\r\n            placeholder=\"Node Name\"\r\n            id=\"\"\r\n          />&ensp;&ensp;\r\n          <p>(send message)</p>\r\n        </form>\r\n        <div class=\"cross\">\r\n          <button onClick={deleteNode}><i class=\"fas fa-times-circle\"></i></button>\r\n        </div>\r\n      </div>\r\n      <div class=\"message\">Hi name, Welcome to brand_name.</div>\r\n    </div>\r\n      <Handle\r\n    \r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        \r\n        // style={{ top: 10, background: '#555' }}\r\n      />\r\n     \r\n    </>\r\n  );\r\n});","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\Node.js",["137"],"import React, { memo , useState} from 'react';\r\nimport { Handle, removeElements } from 'react-flow-renderer';\r\nimport './style1.css'\r\nexport default memo(({id,data}) => {\r\n  \r\n  const deleteNode = () =>{\r\n    data.setElements((els) => removeElements([els.find( e => e.id === id)], els));\r\n  }\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        // style={{ background: '#555' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n     \r\n    <div className=\"node\">\r\n      <div className=\"node-header\">\r\n      <i className=\"far fa-envelope-open\"></i>\r\n        <div className=\"node-name\" >\r\n          {/* <i className=\"far fa-envelope-open\"></i> */}\r\n         \r\n        </div>\r\n        <div className=\"cross\">\r\n          <button onClick={deleteNode}>\r\n            <i className=\"fas fa-times-circle\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"message\"><strong>{data.label}</strong>.</div>\r\n    </div>\r\n      <Handle\r\n      onClick={() => {\r\n        console.log(\"clicked\");\r\n        document.getElementById(\"grey-screen\").style = \"width:100%\";\r\n        document.getElementById(\"sidebar\").classList.add(\"side-bar-open\");\r\n        data.setPrevNode(id);\r\n      }}\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ cursor:\"pointer\" }}\r\n        // style={{ top: 10, background: '#555' }}\r\n      />\r\n     \r\n    </>\r\n  );\r\n});","D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\AddIconNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\SideBarOptions.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\StartNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\QuickReplyNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\ImageNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\TextNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\CardNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\VideoNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\AttachmentNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\RatingNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\FormNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\SearchListNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\MultiSelectNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\RangeNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\BitNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\NameFieldNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\EmailFieldNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\PhoneNumNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\LocationNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\DataFieldNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\TimeFieldNode.js",[],"D:\\Trilyo\\Projects\\react-flow-demo\\src\\bot-builder\\NodeComponents\\CustomFieldNode.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":74,"column":7,"nodeType":"159","endLine":74,"endColumn":9,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"165","line":13,"column":9,"nodeType":"163","messageId":"164","endLine":13,"endColumn":15},{"ruleId":"161","severity":1,"message":"166","line":39,"column":10,"nodeType":"163","messageId":"164","endLine":39,"endColumn":25},{"ruleId":"161","severity":1,"message":"167","line":39,"column":27,"nodeType":"163","messageId":"164","endLine":39,"endColumn":45},{"ruleId":"161","severity":1,"message":"168","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":15,"column":11,"nodeType":"171","messageId":"172","endLine":15,"endColumn":13},{"ruleId":"161","severity":1,"message":"168","line":1,"column":24,"nodeType":"163","messageId":"164","endLine":1,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":864,"column":7,"nodeType":"175","endLine":868,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":892,"column":7,"nodeType":"175","endLine":896,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":941,"column":7,"nodeType":"175","endLine":945,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":979,"column":7,"nodeType":"175","endLine":983,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1063,"column":7,"nodeType":"175","endLine":1067,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1091,"column":7,"nodeType":"175","endLine":1095,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1148,"column":7,"nodeType":"175","endLine":1152,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1178,"column":7,"nodeType":"175","endLine":1182,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1231,"column":7,"nodeType":"175","endLine":1235,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1266,"column":7,"nodeType":"175","endLine":1270,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1329,"column":7,"nodeType":"175","endLine":1333,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1390,"column":7,"nodeType":"175","endLine":1394,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1417,"column":7,"nodeType":"175","endLine":1421,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1481,"column":7,"nodeType":"175","endLine":1485,"endColumn":8},{"ruleId":"173","severity":1,"message":"174","line":1505,"column":7,"nodeType":"175","endLine":1509,"endColumn":8},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialElements'. Either include it or remove the dependency array.","ArrayExpression",["178"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'greyBg' is assigned a value but never used.","'interactionName' is assigned a value but never used.","'setInteractionName' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [initialElements]",{"range":"181","text":"182"},[2203,2205],"[initialElements]"]